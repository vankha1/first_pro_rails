<%= stylesheet_link_tag 'albums/index'%>
<% provide(:title, "Feeds") %>
<main id="main_album" class="row m-0">
    <%= render "layouts/sidebar" %>

    <!-- Main content -->
    <div class="container_ col-12 col-md-8 m-md-0 justify-content-none">
        <%= render "shared/feed_nav" %>

        <div
          class="feeds_container d-flex flex-wrap flex-column flex-md-row"
          style="gap: 20px;"
        >
          <% if !@albums || @albums.length == 0 %>
              <h5 class="align-self-center m-auto">No albums </h5>
          <% else %>
              <% @albums.each do |album| %> 
                  <%= render "card", album: album %>
                  <%= render "shared/modal_album", album: album %>
              <% end %>
          <% end %>
          
        </div>

        <!-- Pagination -->
        <%= will_paginate @photos, renderer: WillPaginate::ActionView::BootstrapLinkRenderer, previous_label: 'Previous',next_label: 'Next'  %>
    </div>
    
    <div class="col-2"></div>
</main>

<script>
    function toggleAlbumModal(id) {
        var modal = new bootstrap.Modal(document.getElementById(id), {
            keyboard: false
        });
        modal.show();
    }

    // Prevent progate event to parent element
    document.querySelectorAll('.fa-heart').forEach((icon) => {
        icon.addEventListener('click', (e) => {
            e.stopPropagation();
        });
    });

    // Prevent propagation for user_info_part
    document.querySelectorAll('.user_info_part').forEach((user_info_part) => {
        user_info_part.addEventListener('click', (e) => {
            e.stopPropagation();
            // navigate to user profile
            const userId = user_info_part.closest('.card').dataset.user;
            window.location.href = `/users/${userId}/photos`;
        });
    });

    const setDebounce = (func, delay) => {
        let debounce;
        return function () {
            const context = this;
            const args = arguments;
            clearTimeout(debounce);
            debounce = setTimeout(() => func.apply(context, args), delay);
        };
    };

    const sendRequest = (url, method, data, callback) => {
        $.ajax({
            url: url,
            type: method,
            dataType: 'script',
            data: data,
            success: callback(data),
            error: function (error) {
                console.log(error);
            }
        });
    }

    // Using debounce for heart button
    document.querySelectorAll('.fa-heart').forEach((icon) => {
        icon.addEventListener('click', setDebounce((e) => {
            const heartIcon = e.target;
            const albumId = heartIcon.closest('.card').dataset.id;
            const heartCount = heartIcon.querySelector('span');
            console.log(heartIcon, albumId, heartCount)
            if (heartIcon.classList.contains('text-secondary')){
                sendRequest(`/albums_reactions`, 'POST', { album_id: albumId }, (data) => {
                    heartIcon.classList.remove('text-secondary');
                    heartCount.textContent = parseInt(heartCount.textContent) + 1;
                });
            } else {
                sendRequest(`/albums_reactions/${albumId}`, 'DELETE', null, (data) => {
                    heartIcon.classList.add('text-secondary');
                    heartCount.textContent = parseInt(heartCount.textContent) - 1;
                });
            }
        }, 1000));
    });
</script>